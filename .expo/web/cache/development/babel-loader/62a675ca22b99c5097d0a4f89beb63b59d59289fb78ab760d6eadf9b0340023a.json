{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport estilo from \"./estilos.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TelaHome = function TelaHome(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    mostrarCards = _useState2[0],\n    setMostrarCrads = _useState2[1];\n  var toggleCards = function toggleCards() {\n    setMostrarCrads(!mostrarCards);\n  };\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    mes = _useState4[0],\n    setMes = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    ano = _useState6[0],\n    setAno = _useState6[1];\n  return _jsx(SafeAreaView, {\n    style: estilo.tela,\n    children: _jsxs(ScrollView, {\n      style: estilo.tela,\n      children: [_jsx(View, {\n        style: estilo.appbar,\n        children: _jsx(Image, {\n          style: estilo.logo,\n          source: require(\"../../../assets/logo/dentechLogo.png\")\n        })\n      }), _jsxs(View, {\n        style: estilo.container,\n        children: [_jsx(Text, {\n          style: estilo.titulo,\n          children: \"Agendar Consulta\"\n        }), _jsx(Text, {\n          style: estilo.tituloInput1,\n          children: \"Informe o m\\xEAs\"\n        }), _jsx(TextInput, {\n          placeholder: \"M\\xEAs\",\n          style: estilo.input,\n          keyboardType: \"numeric\",\n          onChangeText: function onChangeText(texto) {\n            setMes(texto);\n          }\n        }), _jsx(Text, {\n          style: estilo.tituloInput2,\n          children: \"Informe o ano\"\n        }), _jsx(TextInput, {\n          placeholder: \"Ano\",\n          style: estilo.input,\n          keyboardType: \"numeric\",\n          onChangeText: function onChangeText(texto) {\n            setAno(texto);\n          }\n        }), _jsx(TouchableOpacity, {\n          style: estilo.botao,\n          onPress: toggleCards,\n          children: _jsx(Text, {\n            style: estilo.textbtn,\n            children: \"Ver hor\\xE1rios\"\n          })\n        }), mostrarCards && _jsxs(View, {\n          style: estilo.mostrarCards,\n          children: [_jsx(View, {\n            style: estilo.card,\n            children: _jsx(TouchableOpacity, {\n              style: estilo.infoCard,\n              onPress: function onPress() {\n                navigation.navigate(\"EscolherServico\");\n              },\n              children: _jsx(Text, {\n                style: estilo.infoCard,\n                children: \"infos\"\n              })\n            })\n          }), _jsx(View, {\n            style: estilo.card,\n            children: _jsx(TouchableOpacity, {\n              style: estilo.infoCard,\n              onPress: function onPress() {\n                navigation.navigate(\"EscolherServico\");\n              },\n              children: _jsx(Text, {\n                style: estilo.infoCard,\n                children: \"infos\"\n              })\n            })\n          }), _jsx(View, {\n            style: estilo.card,\n            children: _jsx(TouchableOpacity, {\n              style: estilo.infoCard,\n              onPress: function onPress() {\n                navigation.navigate(\"EscolherServico\");\n              },\n              children: _jsx(Text, {\n                style: estilo.infoCard,\n                children: \"infos\"\n              })\n            })\n          })]\n        })]\n      })]\n    })\n  });\n};\nexport default TelaHome;","map":{"version":3,"names":["React","useState","SafeAreaView","ScrollView","View","Text","Image","TouchableOpacity","TextInput","estilo","jsx","_jsx","jsxs","_jsxs","TelaHome","_ref","navigation","_useState","_useState2","_slicedToArray","mostrarCards","setMostrarCrads","toggleCards","_useState3","_useState4","mes","setMes","_useState5","_useState6","ano","setAno","style","tela","children","appbar","logo","source","require","container","titulo","tituloInput1","placeholder","input","keyboardType","onChangeText","texto","tituloInput2","botao","onPress","textbtn","card","infoCard","navigate"],"sources":["C:/Users/nalan/app_dentech/src/screens/home/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { SafeAreaView, ScrollView, View, Text, Image, TouchableOpacity, TextInput } from 'react-native';\r\nimport estilo from './estilos.js';\r\n\r\nconst TelaHome  = ({ navigation }) => {\r\n\r\n    const [mostrarCards, setMostrarCrads] = useState(false);\r\n\r\n    const toggleCards = () => {\r\n        setMostrarCrads(!mostrarCards);\r\n    };\r\n\r\n    const [mes, setMes] = useState('');\r\n    const [ano, setAno] = useState('');\r\n\r\n    return(\r\n        <SafeAreaView style={estilo.tela}>\r\n            <ScrollView style={estilo.tela}>\r\n                <View style={estilo.appbar}>\r\n                    <Image style={estilo.logo} source={require('../../../assets/logo/dentechLogo.png')} />\r\n                </View>\r\n\r\n                <View style={estilo.container}>\r\n                    <Text style={estilo.titulo}>Agendar Consulta</Text>\r\n\r\n                    <Text style={estilo.tituloInput1}>Informe o mês</Text>\r\n\r\n                    <TextInput placeholder=\"Mês\" style={estilo.input} keyboardType=\"numeric\" onChangeText={(texto) => {\r\n                            setMes(texto);\r\n                        } } />\r\n\r\n                    <Text style={estilo.tituloInput2}>Informe o ano</Text>\r\n\r\n                    <TextInput placeholder=\"Ano\" style={estilo.input} keyboardType=\"numeric\"  onChangeText={(texto) => {\r\n                        setAno(texto);\r\n                    }} />\r\n\r\n                    <TouchableOpacity style={estilo.botao} onPress={toggleCards}>\r\n                        <Text style={estilo.textbtn}>Ver horários</Text>\r\n                    </TouchableOpacity>      \r\n\r\n                    {mostrarCards && (\r\n                        <View style={estilo.mostrarCards}>\r\n\r\n                            <View style={estilo.card}>\r\n                                <TouchableOpacity style={estilo.infoCard} onPress={() => { navigation.navigate( \"EscolherServico\" ) } }>\r\n                                    <Text style={estilo.infoCard}>infos</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n\r\n                            <View style={estilo.card}>\r\n                                <TouchableOpacity style={estilo.infoCard} onPress={() => { navigation.navigate( \"EscolherServico\" ) } }>\r\n                                    <Text style={estilo.infoCard}>infos</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n\r\n                            <View style={estilo.card}>\r\n                                <TouchableOpacity style={estilo.infoCard} onPress={() => { navigation.navigate( \"EscolherServico\" ) } }>\r\n                                    <Text style={estilo.infoCard}>infos</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n\r\n                        </View>\r\n                    )}\r\n\r\n                </View>\r\n            </ScrollView>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\n\r\nexport default TelaHome;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}